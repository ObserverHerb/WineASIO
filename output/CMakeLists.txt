cmake_minimum_required(VERSION 3.13)
project(wineasio_dll C)

set(CMAKE_C_COMPILER winegcc)
set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -shared ${CMAKE_SOURCE_DIR}/wineasio.dll.spec")
if(NOT WIN64)
	set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -m32")
endif()

if(NOT DEFINED WINE_FLAVOR)
	set(WINE_FLAVOR wine)
endif()
if(WIN64)
	if(EXISTS ${WINE_INSTALL_PREFIX}/lib64)
		set(WINE_LIB_PATH ${WINE_INSTALL_PREFIX}/lib64/${WINE_FLAVOR})
	else()
		set(WINE_LIB_PATH ${WINE_INSTALL_PREFIX}/lib/${WINE_FLAVOR})
	endif()
else()
	if(EXISTS ${WINE_INSTALL_PREFIX}/lib32)
		set(WINE_LIB_PATH ${WINE_INSTALL_PREFIX}/lib32/${WINE_FLAVOR})
	else()
		set(WINE_LIB_PATH ${WINE_INSTALL_PREFIX}/lib/${WINE_FLAVOR})
	endif()
endif()

find_package(PkgConfig)
pkg_check_modules(JACK REQUIRED jack)
pkg_check_modules(UUID REQUIRED uuid)

add_library(wineasio.dll SHARED)
set_target_properties(wineasio.dll PROPERTIES PREFIX "")
target_link_libraries(wineasio.dll interim ${JACK_LIBRARIES} ${UUID_LIBRARIES} odbc32 ole32 winmm)

install(TARGETS wineasio.dll DESTINATION ${WINE_LIB_PATH}/wine)
